<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server_forexam.dao.CommunityCommentMapper">
    <resultMap id="BasesResultMap" type="com.example.server_forexam.entity.CommunityComment">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="entity_type" property="entityType"/>
        <result column="entity_id" property="entityId"/>
        <result column="target_id" property="targetId"/>
        <result column="content" property="content"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <sql id="selectFields">
        id,user_id,entity_type,entity_id,target_id,content,status,create_time
    </sql>
    <sql id="insertFields">
        user_id,entity_type,entity_id,target_id,content,status,create_time
    </sql>
    <!--发布评论-->
    <insert id="insertCommunityComment" parameterType="com.example.server_forexam.entity.CommunityComment">
        INSERT INTO community_comment(<include refid="insertFields"></include>)
        VALUES(#{userId},#{entityType},#{entityId},#{targetId},#{content},#{status},#{createTime})
    </insert>
    <!--查询评论列表-->
    <select id="communityCommentList" resultMap="BasesResultMap">
        SELECT <include refid="selectFields"></include>
        FROM community_comment
        WHERE entity_type = #{entityType}
        AND   entity_id = #{entityId}
        AND   status = 0
    </select>
    <!--修改评论状态-->
    <update id="updateCommunityCommentStatus" parameterType="int" >
        UPDATE community_comment
        SET status = #{status}
        WHERE id = #{id}
    </update>
    <!-- 查询该贴/评论的数量-->
    <select id="selectCommunityCommentCount" resultType="int">
        SELECT COUNT(id)
        FROM community_comment
        WHERE entity_type = #{entityType}
          AND   entity_id = #{entityId}
    </select>
</mapper>
