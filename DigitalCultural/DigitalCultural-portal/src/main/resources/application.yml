server:
  port: 8080
file:
  save-path: D:\ProgramData\newcultural\Digital-Cultural-and-Creative-Industries\DigitalCultural\DigitalCultural-portal\src\main\resources\static\images\

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/dcc?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    #    jdbctemplate
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
      stat-view-servlet: #访问监控网页的登录用户名和密码
        login-username: druid
        login-password: druid


  redis:
    host: 127.0.0.1 # Redis服务器地址
    #    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    #    password: # Redis服务器连接密码（默认为空）
    timeout: 300ms # 连接超时时间（毫秒）
  # 修改swagger的路径匹配配置，使其兼容新版的SpringBoot
  cache:
    redis:
      time-to-live: 1800000 # 设置数据过期时间为半小时（ms）
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

mybatis:
  configuration:
    # 下划线自动转驼峰
    map-underscore-to-camel-case: true
  mapper-locations:
    - classpath:dao/*.xml

#jwt:
#  tokenHeader: Authorization #JWT存储的请求头
#  secret: secret #JWT加解密使用的密钥
#  expiration: 604800 #JWT的超期限时间(60*60*24*7)
#  tokenHead: 'Bearer '  #JWT负载中拿到开头


# Elasticsearch
  spring:
      elasticsearch:
      uris: http://127.0.0.1:9200 # elasticsearch 连接地址
      connection-timeout: 10s # 连接超时时间（默认1s）
      socket-timeout: 30s # 数据读取超时时间（默认30s）





  # Quartz 【内存调度程序的配置集】
  quartz:
    #数据库方式
    job-store-type: jdbc
    #相关属性配置
    properties:
      org:
        quartz:
          scheduler:
            instanceName: CommunityScheduler #调度程序实例名称
            instanceId: AUTO #自动生成唯一id
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            isClustered: true
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 5
#RabbitMq
    rabbitmq:
      host:127.0.0.1
      port=5672
      username=guest
      password=guest
      publisher-confirm-type=correlated

