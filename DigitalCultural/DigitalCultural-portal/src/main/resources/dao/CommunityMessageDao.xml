<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.digitalculturalportal.dao.CommunityMessageDao">
    <resultMap id="BasesResultMap" type="org.example.digitalculturalportal.pojo.CommunityMessage">
        <id column="id" property="id"/>
        <result column="from_id" property="fromId"/>
        <result column="to_id" property="toId"/>
        <result column="conversation_id" property="conversationId"/>
        <result column="content" property="content"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <!--添加一条私信-->
    <insert id="insertMessage" parameterType="org.example.digitalculturalportal.pojo.CommunityMessage" keyProperty="id">
        INSERT INTO community_message
        (<include refid="insertFields"></include>)
        VALUES(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
    <!--查询当前用户会话列表-->
    <select id="selectConversationList" resultMap="BasesResultMap">
         SELECT <include refid="selectFields"></include>
             FROM community_message
             WHERE  id IN(
             SELECT MAX(id)
             FROM community_message
             WHERE status!=2
             AND from_id!=1
             AND (from_id=#{fromId} OR to_id=#{userId})
             GROUP BY conversation_id
        )
         ORDER BY id DESC
    </select>
    <!--查询当前用户的会话数量-->
    <select id="selectConversationCount" resultType="int">
        SELECT COUNT(m.maxid) FROM (
            SELECT MAX(id) AS maxid
            FROM community_message
            WHERE status!=2
            AND from_id!=1
            AND (from_id=#{userId} OR to_id=#{userId})
            GROUP BY conversation_id
            )AS m
    </select>
    <!--查询某个会话的私信列表-->
    <select id="selectLetterList" resultMap="BasesResultMap">
        SELECT <include refid="selectFields"></include>
        FROM community_message
        WHERE status != 2
        AND from_id != 1
        AND conversation_id = #{conversationId}
        ORDER BY id ASC
    </select>
    <!--查询某个会话的私信数量-->
    <select id="selectLetterCount" resultType="int">
        SELECT COUNT(id)
        FROM community_message
        WHERE status != 2
        AND from_id != 1
        AND conversation_id = #{conversationId}
    </select>
    <!--查询会话未读私信的数量-->
    <select id="selectUnreadLetterCount" resultType="int">
        SELECT COUNT(id)
        FROM community_message
        WHERE status = 0
        AND from_id != 1
        AND to_id = #{userId}
        <if test="conversationId != null">
            AND conversation_id = #{conversationId}
        </if>
    </select>
    <!--修改消息状态-->
    <update id="updateStatus">
        UPDATE community_message
        SET status = #{status}
        WHERE id IN
        <foreach collection="indexId" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <!--查询某个主题下的最新系统通知-->
    <select id="selectLatestNotice" resultMap="BasesResultMap">
        SELECT <include refid="selectFields"></include>
        FROM community_message
        WHERE id IN (
        SELECT MAX(id) FROM community_message
        WHERE status != 2
        AND from_id = 1
        AND to_id = #{userId}
        AND conversation_id = #{topic}
        )
    </select>
    <!--查询某个主题下包含的系统通知数量-->
    <select id="selectNoticeCount" resultType="int">
        SELECT COUNT(id)
        FROM community_message
        WHERE status != 2
        AND from_id = 1
        AND to_id = #{userId}
        AND conversation_id = #{topic}
    </select>

    <!--查询未读的系统通知数量-->
    <select id="selectNoticeUnReadCount" resultType="int">
        SELECT COUNT(id)
        FROM community_message
        WHERE status = 0
        AND from_id = 1
        AND to_id = #{userId}
        <if test = "topic != null">
            AND conversation_id = #{topic}
        </if>
    </select>

    <!--查询某个主题所包含的通知列表-->
    <select id="selectNoticeList" resultMap="BasesResultMap">
        SELECT <include refid="selectFields"></include>
        FROM community_message
        WHERE status != 2
        AND from_id = 1
        AND to_id = #{userId}
        AND conversation_id = #{topic}
        ORDER BY create_time DESC
    </select>


</mapper>
