{"remainingRequest":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\src\\views\\login\\index.vue","mtime":1722331098777},{"path":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\babel.config.js","mtime":1721705225479},{"path":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721705227172},{"path":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":1721705226958},{"path":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721705227172},{"path":"D:\\GitHubProject\\Digital-Cultural-and-Creative-Industries\\DigitalCulturalWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1721705237380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbG9naW4gfSBmcm9tICcuLi8uLi9hcGkvbG9naW4nOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICBjb25maXJtUGFzc3dvcmQ6ICcnLAogICAgICBjYXB0Y2hhOiAnJywKICAgICAgLy8g55So5LqO5a2Y5YKo55Sf5oiQ55qE6aqM6K+B56CBCiAgICAgIGNhcHRjaGFJbnB1dDogJycsCiAgICAgIC8vIOeUqOaIt+i+k+WFpeeahOmqjOivgeeggQogICAgICBsb2dpbk1vZGU6IHRydWUsCiAgICAgIC8vIOm7mOiupOaYvuekuueZu+W9leihqOWNlQogICAgICBlcnJvcjogJycsCiAgICAgIHN1Y2Nlc3M6ICcnCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2VuZXJhdGVDYXB0Y2hhKCk7IC8vIOe7hOS7tuWIm+W7uuaXtueUn+aIkOmqjOivgeeggQogIH0sCiAgbWV0aG9kczogewogICAgc3dpdGNoVG9Mb2dpbjogZnVuY3Rpb24gc3dpdGNoVG9Mb2dpbigpIHsKICAgICAgdGhpcy5sb2dpbk1vZGUgPSB0cnVlOwogICAgICB0aGlzLnJlc2V0Rm9ybSgpOwogICAgfSwKICAgIHN3aXRjaFRvUmVnaXN0ZXI6IGZ1bmN0aW9uIHN3aXRjaFRvUmVnaXN0ZXIoKSB7CiAgICAgIHRoaXMubG9naW5Nb2RlID0gZmFsc2U7CiAgICAgIHRoaXMucmVzZXRGb3JtKCk7CiAgICB9LAogICAgaGFuZGxlU3VibWl0OiBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIGlmICghdGhpcy52YWxpZGF0ZUNhcHRjaGEoKSkgewogICAgICAgIHRoaXMuZXJyb3IgPSAnSW52YWxpZCB2ZXJpZmljYXRpb24gY29kZS4gUGxlYXNlIHRyeSBhZ2Fpbi4nOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMubG9naW5Nb2RlKSB7CiAgICAgICAgdGhpcy5oYW5kbGVMb2dpbigpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuaGFuZGxlUmVnaXN0ZXIoKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZUxvZ2luOiBmdW5jdGlvbiBoYW5kbGVMb2dpbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGxvZ2luKHRoaXMudXNlcm5hbWUsIHRoaXMucGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgIF90aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+eZu+mZhuaIkOWKnycpOwoKICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlcy5kYXRhLnRva2VuKTsKCiAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVJlZ2lzdGVyOiBmdW5jdGlvbiBoYW5kbGVSZWdpc3RlcigpIHsKICAgICAgLy8g5a6e546w5rOo5YaM6YC76L6RCiAgICAgIGlmICh0aGlzLnBhc3N3b3JkICE9PSB0aGlzLmNvbmZpcm1QYXNzd29yZCkgewogICAgICAgIHRoaXMuZXJyb3IgPSAnUGFzc3dvcmRzIGRvIG5vdCBtYXRjaC4gUGxlYXNlIHRyeSBhZ2Fpbi4nOwogICAgICAgIHJldHVybjsKICAgICAgfSAvLyDlj6/ku6Xmt7vliqDms6jlhowgQVBJIOiwg+eUqOetieWunumZhemAu+i+kQoKCiAgICAgIHRoaXMuc3VjY2VzcyA9ICdSZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCEnOwogICAgfSwKICAgIGdlbmVyYXRlQ2FwdGNoYTogZnVuY3Rpb24gZ2VuZXJhdGVDYXB0Y2hhKCkgewogICAgICAvLyDnlJ/miJDpmo/mnLrnmoTpqozor4HnoIEKICAgICAgdmFyIGNoYXJzID0gJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJzsKICAgICAgdmFyIHJlc3VsdCA9ICcnOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA2OyBpKyspIHsKICAgICAgICByZXN1bHQgKz0gY2hhcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKV07CiAgICAgIH0KCiAgICAgIHRoaXMuY2FwdGNoYSA9IHJlc3VsdDsKICAgIH0sCiAgICByZWZyZXNoQ2FwdGNoYTogZnVuY3Rpb24gcmVmcmVzaENhcHRjaGEoKSB7CiAgICAgIC8vIOWIt+aWsOmqjOivgeeggQogICAgICB0aGlzLmdlbmVyYXRlQ2FwdGNoYSgpOwogICAgICB0aGlzLmNhcHRjaGFJbnB1dCA9ICcnOyAvLyDmuIXnqbrnlKjmiLfovpPlhaXnmoTpqozor4HnoIEKICAgIH0sCiAgICB2YWxpZGF0ZUNhcHRjaGE6IGZ1bmN0aW9uIHZhbGlkYXRlQ2FwdGNoYSgpIHsKICAgICAgLy8g6aqM6K+B6aqM6K+B56CB5piv5ZCm5Yy56YWNCiAgICAgIHJldHVybiB0aGlzLmNhcHRjaGFJbnB1dC50b0xvd2VyQ2FzZSgpID09PSB0aGlzLmNhcHRjaGEudG9Mb3dlckNhc2UoKTsKICAgIH0sCiAgICByZXNldEZvcm06IGZ1bmN0aW9uIHJlc2V0Rm9ybSgpIHsKICAgICAgdGhpcy51c2VybmFtZSA9ICcnOwogICAgICB0aGlzLnBhc3N3b3JkID0gJyc7CiAgICAgIHRoaXMuY29uZmlybVBhc3N3b3JkID0gJyc7CiAgICAgIHRoaXMuY2FwdGNoYUlucHV0ID0gJyc7CiAgICAgIHRoaXMuZXJyb3IgPSAnJzsKICAgICAgdGhpcy5zdWNjZXNzID0gJyc7CiAgICAgIHRoaXMuZ2VuZXJhdGVDYXB0Y2hhKCk7IC8vIOmHjee9rumqjOivgeeggQogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;EACAA,IADA,kBACA;IACA;MACAC,YADA;MAEAC,YAFA;MAGAC,mBAHA;MAIAC,WAJA;MAIA;MACAC,gBALA;MAKA;MACAC,eANA;MAMA;MACAC,SAPA;MAQAC;IARA;EAUA,CAZA;EAaAC,OAbA,qBAaA;IACA,uBADA,CACA;EACA,CAfA;EAgBAC;IACAC,aADA,2BACA;MACA;MACA;IACA,CAJA;IAKAC,gBALA,8BAKA;MACA;MACA;IACA,CARA;IASAC,YATA,0BASA;MACA;QACA;QACA;MACA;;MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CApBA;IAqBAC,WArBA,yBAqBA;MAAA;;MACAC;QACAC;;QACA;;QACAC;;QACA;MACA,CALA,EAKAC,KALA,CAKA;QACAF;MACA,CAPA;IASA,CA/BA;IAgCAG,cAhCA,4BAgCA;MACA;MACA;QACA;QACA;MACA,CALA,CAMA;;;MACA;IACA,CAxCA;IAyCAC,eAzCA,6BAyCA;MACA;MACA;MACA;;MACA;QACAC;MACA;;MACA;IACA,CAjDA;IAkDAC,cAlDA,4BAkDA;MACA;MACA;MACA,uBAHA,CAGA;IACA,CAtDA;IAuDAC,eAvDA,6BAuDA;MACA;MACA;IACA,CA1DA;IA2DAC,SA3DA,uBA2DA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,uBAPA,CAOA;IACA;EAnEA;AAhBA","names":["data","username","password","confirmPassword","captcha","captchaInput","loginMode","error","success","created","methods","switchToLogin","switchToRegister","handleSubmit","handleLogin","login","console","sessionStorage","catch","handleRegister","generateCaptcha","result","refreshCaptcha","validateCaptcha","resetForm"],"sourceRoot":"src/views/login","sources":["index.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <div class=\"switch-buttons\">\r\n        <button :class=\"{ active: loginMode }\" @click=\"switchToLogin\">Login</button>\r\n        <button :class=\"{ active: !loginMode }\" @click=\"switchToRegister\">Register</button>\r\n      </div>\r\n  \r\n      <h2 v-if=\"loginMode\">Login</h2>\r\n      <h2 v-else>Register</h2>\r\n  \r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n        </div>\r\n  \r\n        <div v-if=\"!loginMode\" class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm Password:</label>\r\n          <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"captcha\">Verification Code:</label>\r\n          <div class=\"captcha-container\">\r\n            <input type=\"text\" id=\"captcha\" v-model=\"captchaInput\" required style=\"width: 100px; height: 30px;\">\r\n            <span class=\"captcha\" v-html=\"captcha\"></span>\r\n            <button type=\"button\" @click=\"refreshCaptcha\">Refresh</button>\r\n          </div>\r\n        </div>\r\n  \r\n        <button type=\"submit\" v-if=\"loginMode\">Login</button>\r\n        <button type=\"submit\" v-else>Register</button>\r\n      </form>\r\n  \r\n      <p v-if=\"error\" class=\"error-msg\">{{ error }}</p>\r\n      <p v-if=\"success\" class=\"success-msg\">{{ success }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import {login} from '../../api/login'\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        captcha: '', // 用于存储生成的验证码\r\n        captchaInput: '', // 用户输入的验证码\r\n        loginMode: true, // 默认显示登录表单\r\n        error: '',\r\n        success: ''\r\n      };\r\n    },\r\n    created() {\r\n      this.generateCaptcha(); // 组件创建时生成验证码\r\n    },\r\n    methods: {\r\n      switchToLogin() {\r\n        this.loginMode = true;\r\n        this.resetForm();\r\n      },\r\n      switchToRegister() {\r\n        this.loginMode = false;\r\n        this.resetForm();\r\n      },\r\n      handleSubmit() {\r\n        if (!this.validateCaptcha()) {\r\n          this.error = 'Invalid verification code. Please try again.';\r\n          return;\r\n        }\r\n  \r\n        if (this.loginMode) {\r\n          this.handleLogin();\r\n        } else {\r\n          this.handleRegister();\r\n        }\r\n      },\r\n      handleLogin() {\r\n        login(this.username, this.password).then(res => {\r\n            console.log(res)\r\n            this.$message.success('登陆成功')\r\n            sessionStorage.setItem('token',res.data.token)\r\n            this.$router.push('/');\r\n        }).catch(e => {\r\n            console.log(e)\r\n        });\r\n        \r\n      },\r\n      handleRegister() {\r\n        // 实现注册逻辑\r\n        if (this.password !== this.confirmPassword) {\r\n          this.error = 'Passwords do not match. Please try again.';\r\n          return;\r\n        }\r\n        // 可以添加注册 API 调用等实际逻辑\r\n        this.success = 'Registration successful!';\r\n      },\r\n      generateCaptcha() {\r\n        // 生成随机的验证码\r\n        const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        let result = '';\r\n        for (let i = 0; i < 6; i++) {\r\n          result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n        this.captcha = result;\r\n      },\r\n      refreshCaptcha() {\r\n        // 刷新验证码\r\n        this.generateCaptcha();\r\n        this.captchaInput = ''; // 清空用户输入的验证码\r\n      },\r\n      validateCaptcha() {\r\n        // 验证验证码是否匹配\r\n        return this.captchaInput.toLowerCase() === this.captcha.toLowerCase();\r\n      },\r\n      resetForm() {\r\n        this.username = '';\r\n        this.password = '';\r\n        this.confirmPassword = '';\r\n        this.captchaInput = '';\r\n        this.error = '';\r\n        this.success = '';\r\n        this.generateCaptcha(); // 重置验证码\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    margin-top: 100px;\r\n    margin-bottom: 140px;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    background-color: #f9f9f9;\r\n    text-align: center;\r\n  }\r\n  \r\n  .switch-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .switch-buttons button {\r\n    padding: 10px 20px;\r\n    margin: 0 5px;\r\n    font-size: 16px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n  }\r\n  \r\n  .switch-buttons button.active {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  h2 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  input[type=\"password\"],\r\n  input[type=\"number\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .captcha-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .captcha {\r\n    margin-left: 10px;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n    background-color: #f0f0f0;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    width: 100px; /* 与输入框宽度一致 */\r\n    height: 30px; /* 与输入框高度一致 */\r\n  }\r\n  \r\n  button[type=\"submit\"] {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button[type=\"button\"] {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n  \r\n  button[type=\"submit\"]:hover,\r\n  button[type=\"button\"]:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .error-msg,\r\n  .success-msg {\r\n    color: #ff0000;\r\n    margin-top: 10px;\r\n  }\r\n  .success-msg {\r\n    color: green;\r\n  }\r\n  </style>\r\n  "]}]}