{"remainingRequest":"D:\\palace_museum-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\palace_museum-main\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\palace_museum-main\\src\\views\\login\\index.vue","mtime":1721216701199},{"path":"D:\\palace_museum-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721129470122},{"path":"D:\\palace_museum-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1721129471018},{"path":"D:\\palace_museum-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721129470122},{"path":"D:\\palace_museum-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1721129471267}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcm5hbWU6ICcnLAogICAgICBwYXNzd29yZDogJycsCiAgICAgIGNvbmZpcm1QYXNzd29yZDogJycsCiAgICAgIGNhcHRjaGE6ICcnLCAvLyDnlKjkuo7lrZjlgqjnlJ/miJDnmoTpqozor4HnoIEKICAgICAgY2FwdGNoYUlucHV0OiAnJywgLy8g55So5oi36L6T5YWl55qE6aqM6K+B56CBCiAgICAgIGxvZ2luTW9kZTogdHJ1ZSwgLy8g6buY6K6k5pi+56S655m75b2V6KGo5Y2VCiAgICAgIGVycm9yOiAnJywKICAgICAgc3VjY2VzczogJycKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZW5lcmF0ZUNhcHRjaGEoKTsgLy8g57uE5Lu25Yib5bu65pe255Sf5oiQ6aqM6K+B56CBCiAgfSwKICBtZXRob2RzOiB7CiAgICBzd2l0Y2hUb0xvZ2luKCkgewogICAgICB0aGlzLmxvZ2luTW9kZSA9IHRydWU7CiAgICAgIHRoaXMucmVzZXRGb3JtKCk7CiAgICB9LAogICAgc3dpdGNoVG9SZWdpc3RlcigpIHsKICAgICAgdGhpcy5sb2dpbk1vZGUgPSBmYWxzZTsKICAgICAgdGhpcy5yZXNldEZvcm0oKTsKICAgIH0sCiAgICBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIGlmICghdGhpcy52YWxpZGF0ZUNhcHRjaGEoKSkgewogICAgICAgIHRoaXMuZXJyb3IgPSAnSW52YWxpZCB2ZXJpZmljYXRpb24gY29kZS4gUGxlYXNlIHRyeSBhZ2Fpbi4nOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMubG9naW5Nb2RlKSB7CiAgICAgICAgdGhpcy5oYW5kbGVMb2dpbigpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuaGFuZGxlUmVnaXN0ZXIoKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZUxvZ2luKCkgewogICAgICBsb2dpbih0aGlzLnVzZXJuYW1lLCB0aGlzLnBhc3N3b3JkKS50aGVuKHJlcyA9PiAoCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICkpLmNhdGNoKGUgPT4gKAogICAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgKSkKICAgICAgLy8g5a6e546w55m75b2V6YC76L6RCiAgICAgIGlmICh0aGlzLnVzZXJuYW1lID09PSAndXNlcicgJiYgdGhpcy5wYXNzd29yZCA9PT0gJ3Bhc3N3b3JkJykgewogICAgICAgICAgY29uc29sZS5sb2coKQogICAgICAgICAgdGhpcy5zdWNjZXNzID0gJ0xvZ2luIHN1Y2Nlc3NmdWwhJzsKICAgICAgICAvLyDlj6/ku6Xmt7vliqDot6/nlLHot7PovazmiJblhbbku5bmk43kvZwKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmVycm9yID0gJ0ludmFsaWQgdXNlcm5hbWUgb3IgcGFzc3dvcmQuIFBsZWFzZSB0cnkgYWdhaW4uJzsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVJlZ2lzdGVyKCkgewogICAgICAvLyDlrp7njrDms6jlhozpgLvovpEKICAgICAgaWYgKHRoaXMucGFzc3dvcmQgIT09IHRoaXMuY29uZmlybVBhc3N3b3JkKSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICdQYXNzd29yZHMgZG8gbm90IG1hdGNoLiBQbGVhc2UgdHJ5IGFnYWluLic7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIC8vIOWPr+S7pea3u+WKoOazqOWGjCBBUEkg6LCD55So562J5a6e6ZmF6YC76L6RCiAgICAgIHRoaXMuc3VjY2VzcyA9ICdSZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCEnOwogICAgfSwKICAgIGdlbmVyYXRlQ2FwdGNoYSgpIHsKICAgICAgLy8g55Sf5oiQ6ZqP5py655qE6aqM6K+B56CBCiAgICAgIGNvbnN0IGNoYXJzID0gJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJzsKICAgICAgbGV0IHJlc3VsdCA9ICcnOwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDY7IGkrKykgewogICAgICAgIHJlc3VsdCArPSBjaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXTsKICAgICAgfQogICAgICB0aGlzLmNhcHRjaGEgPSByZXN1bHQ7CiAgICB9LAogICAgcmVmcmVzaENhcHRjaGEoKSB7CiAgICAgIC8vIOWIt+aWsOmqjOivgeeggQogICAgICB0aGlzLmdlbmVyYXRlQ2FwdGNoYSgpOwogICAgICB0aGlzLmNhcHRjaGFJbnB1dCA9ICcnOyAvLyDmuIXnqbrnlKjmiLfovpPlhaXnmoTpqozor4HnoIEKICAgIH0sCiAgICB2YWxpZGF0ZUNhcHRjaGEoKSB7CiAgICAgIC8vIOmqjOivgemqjOivgeeggeaYr+WQpuWMuemFjQogICAgICByZXR1cm4gdGhpcy5jYXB0Y2hhSW5wdXQudG9Mb3dlckNhc2UoKSA9PT0gdGhpcy5jYXB0Y2hhLnRvTG93ZXJDYXNlKCk7CiAgICB9LAogICAgcmVzZXRGb3JtKCkgewogICAgICB0aGlzLnVzZXJuYW1lID0gJyc7CiAgICAgIHRoaXMucGFzc3dvcmQgPSAnJzsKICAgICAgdGhpcy5jb25maXJtUGFzc3dvcmQgPSAnJzsKICAgICAgdGhpcy5jYXB0Y2hhSW5wdXQgPSAnJzsKICAgICAgdGhpcy5lcnJvciA9ICcnOwogICAgICB0aGlzLnN1Y2Nlc3MgPSAnJzsKICAgICAgdGhpcy5nZW5lcmF0ZUNhcHRjaGEoKTsgLy8g6YeN572u6aqM6K+B56CBCiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <div class=\"switch-buttons\">\r\n        <button :class=\"{ active: loginMode }\" @click=\"switchToLogin\">Login</button>\r\n        <button :class=\"{ active: !loginMode }\" @click=\"switchToRegister\">Register</button>\r\n      </div>\r\n  \r\n      <h2 v-if=\"loginMode\">Login</h2>\r\n      <h2 v-else>Register</h2>\r\n  \r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n        </div>\r\n  \r\n        <div v-if=\"!loginMode\" class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm Password:</label>\r\n          <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"captcha\">Verification Code:</label>\r\n          <div class=\"captcha-container\">\r\n            <input type=\"text\" id=\"captcha\" v-model=\"captchaInput\" required style=\"width: 100px; height: 30px;\">\r\n            <span class=\"captcha\" v-html=\"captcha\"></span>\r\n            <button type=\"button\" @click=\"refreshCaptcha\">Refresh</button>\r\n          </div>\r\n        </div>\r\n  \r\n        <button type=\"submit\" v-if=\"loginMode\">Login</button>\r\n        <button type=\"submit\" v-else>Register</button>\r\n      </form>\r\n  \r\n      <p v-if=\"error\" class=\"error-msg\">{{ error }}</p>\r\n      <p v-if=\"success\" class=\"success-msg\">{{ success }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        captcha: '', // 用于存储生成的验证码\r\n        captchaInput: '', // 用户输入的验证码\r\n        loginMode: true, // 默认显示登录表单\r\n        error: '',\r\n        success: ''\r\n      };\r\n    },\r\n    created() {\r\n      this.generateCaptcha(); // 组件创建时生成验证码\r\n    },\r\n    methods: {\r\n      switchToLogin() {\r\n        this.loginMode = true;\r\n        this.resetForm();\r\n      },\r\n      switchToRegister() {\r\n        this.loginMode = false;\r\n        this.resetForm();\r\n      },\r\n      handleSubmit() {\r\n        if (!this.validateCaptcha()) {\r\n          this.error = 'Invalid verification code. Please try again.';\r\n          return;\r\n        }\r\n  \r\n        if (this.loginMode) {\r\n          this.handleLogin();\r\n        } else {\r\n          this.handleRegister();\r\n        }\r\n      },\r\n      handleLogin() {\r\n        login(this.username, this.password).then(res => (\r\n            console.log(res)\r\n        )).catch(e => (\r\n            console.log(e)\r\n        ))\r\n        // 实现登录逻辑\r\n        if (this.username === 'user' && this.password === 'password') {\r\n            console.log()\r\n            this.success = 'Login successful!';\r\n          // 可以添加路由跳转或其他操作\r\n        } else {\r\n          this.error = 'Invalid username or password. Please try again.';\r\n        }\r\n      },\r\n      handleRegister() {\r\n        // 实现注册逻辑\r\n        if (this.password !== this.confirmPassword) {\r\n          this.error = 'Passwords do not match. Please try again.';\r\n          return;\r\n        }\r\n        // 可以添加注册 API 调用等实际逻辑\r\n        this.success = 'Registration successful!';\r\n      },\r\n      generateCaptcha() {\r\n        // 生成随机的验证码\r\n        const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        let result = '';\r\n        for (let i = 0; i < 6; i++) {\r\n          result += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n        this.captcha = result;\r\n      },\r\n      refreshCaptcha() {\r\n        // 刷新验证码\r\n        this.generateCaptcha();\r\n        this.captchaInput = ''; // 清空用户输入的验证码\r\n      },\r\n      validateCaptcha() {\r\n        // 验证验证码是否匹配\r\n        return this.captchaInput.toLowerCase() === this.captcha.toLowerCase();\r\n      },\r\n      resetForm() {\r\n        this.username = '';\r\n        this.password = '';\r\n        this.confirmPassword = '';\r\n        this.captchaInput = '';\r\n        this.error = '';\r\n        this.success = '';\r\n        this.generateCaptcha(); // 重置验证码\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    margin-top: 100px;\r\n    margin-bottom: 140px;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    background-color: #f9f9f9;\r\n    text-align: center;\r\n  }\r\n  \r\n  .switch-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .switch-buttons button {\r\n    padding: 10px 20px;\r\n    margin: 0 5px;\r\n    font-size: 16px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n  }\r\n  \r\n  .switch-buttons button.active {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  h2 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  input[type=\"password\"],\r\n  input[type=\"number\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .captcha-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .captcha {\r\n    margin-left: 10px;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n    background-color: #f0f0f0;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    width: 100px; /* 与输入框宽度一致 */\r\n    height: 30px; /* 与输入框高度一致 */\r\n  }\r\n  \r\n  button[type=\"submit\"] {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button[type=\"button\"] {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n  \r\n  button[type=\"submit\"]:hover,\r\n  button[type=\"button\"]:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .error-msg,\r\n  .success-msg {\r\n    color: #ff0000;\r\n    margin-top: 10px;\r\n  }\r\n  .success-msg {\r\n    color: green;\r\n  }\r\n  </style>\r\n  "]}]}